Jason Stunkard 
CWID: 11140095
Homework 1
CS 4343

#1) Insertion runs at 4n^2
    Merge runs at 32nlog(n)
    When n = 2 through 26 insertion is faster than merge sort.

#2) f1 = n
    f2 = n^2.5
    f3 = n^2 * log(n)
    f4 = 1.5^n
    f5 = n * sqrt(n)
    
    f1 ϵ O(f2)     f2 ϵ Ω(f1)     f3 ϵ Ω(f1)     f4 ϵ Ω(f1)     f5 ϵ ϴ(f1)
    f1 ϵ O(f3)     f2 ϵ ϴ(f3)     f3 ϵ ϴ(f2)     f4 ϵ Ω(f2)     f5 ϵ O(f2)
    f1 ϵ O(f4)     f2 ϵ O(f4)     f3 ϵ O(f4)     f4 ϵ Ω(f3)     f5 ϵ O(f3)
    f1 ϵ O(f5)     f2 ϵ Ω(f5)     f3 ϵ Ω(f5)     f4 ϵ Ω(f5)     f5 ϵ O(f4)

#3) f1 = n * log(n)
    f2 = 5*n

    f1 ϵ O(f2)
    n0 = e^5  intersection point
    c = 5    

#4) f1 = n^3
    f2 = 3n^3 - 2n^2 + 2

    f1 ϵ Ω(f2)
    n0 = 1   intersection point when c = 1/3
    c = 1/3

#5) Find the O-notation of 
    
    for(i=0;i<n;i++){             n times
      for(j=0;j<2*n;j++)            2*n times
        sum = sum + A[i] * A[j]       same as above
      for(j=0;j<n*n;j++)            n^2 times
        sum = sum + A[i] + A[j]       same as above
    }
    
      This is equal to n[2*(2n) + 2*(n^2)] 
                       4*n^2 + 2*n^3
      n^3 is the highest rate of growth therefore 
      O-notation is O(n^3) in general or O(2*n^3 + 4*n^2)
    
